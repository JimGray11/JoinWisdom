#framework name
name = "rms-pred-daily-V_HTL"

#mail configurations
mail{
  api.url="http://42.62.78.140:8002/WarningEmail/"
  #multi receiver, such as ["a1@b.com","a2@b.com"]
  to=["xnzhang@jointwisdom.cn","yclai@jointwisdom.cn"]
  #to=["xnzhang@jointwisdom.cn"]
}

#assembly的存放目录的绝对路径
assemblies-dir = "V_ROOT_DIR/assemblies/"
#所有assembly的配置信息
assemblies = [
# Process 1
  {
    name = "micro-pred-fit-total"
    index = 1
    #options ["cleaner","model"]
    type = "cleaner"
    jar-name = "rms-ab-micro-etl-fit-total-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.etl.fittotal.Cleaner"
    enable = true
  },
  {
    name = "micro-pred-fit-shortterm"
    index = 2
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-shortterm-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.shortterm.Predictor"
    enable = true
  },
  { 
    name = "micro-pred-shortterm"
    index = 3
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-shortterm-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.shortterm.Predictor"
    enable = true
  },
  {
    name = "micro-pred-fit-shortterm-fix"
    index = 4
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-fix-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.fix.Predictor"
    enable = true
  },
  {
    name = "micro-pred-fit-shortterm-fix-sum"
    index = 5
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-sum-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.sum.Predictor"
    enable = true
  },
  {
    name = "micro-pred-shortterm-split"
    index = 6
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-split-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.split.Predictor"
    enable = true
  },
  {
    name = "micro-pred-shortterm-split-sum"
    index = 7
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-sum-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.sum.Predictor"
    enable = true
  },
# Process 2
  {
    name = "micro-pred-fit-longterm"
    index = 8
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-longterm-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.longterm.Predictor"
    enable = true
  },
  {
    name = "micro-pred-fit-longterm-sum"
    index = 9
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-sum-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.sum.Predictor"
    enable = true
  },
  {
    name = "micro-pred-longterm"
    index = 10
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-longterm-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.longterm.Predictor"
    enable = true
  },
  {
    name = "micro-pred-longterm-sum"
    index = 11
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-sum-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.sum.Predictor"
    enable = true
  },
  {
    name = "micro-pred-copy-daily-to-hist"
    index = 12
    #options ["cleaner","model"]
    type = "cleaner"
    jar-name = "rms-ab-micro-pred-copy-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.micro.pred.copy.Cleaner"
    enable = V_ENABLE_COPY
  },
  {
    name = "micro-pred-fit-wsfweight"
    index = 13
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-wsfweight-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.micro.pred.wsfweight.Predictor"
    enable = true
  },
  {
    name = "micro-pred-wsfweight"
    index = 14
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-wsfweight-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.micro.pred.wsfweight.Predictor"
    enable = true
  },
  {
    name = "micro-pred-fit-combine"
    index = 15
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-combine-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.combine.Predictor"
    enable = true
  },
  {
    name = "micro-pred-combine"
    index = 16
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-combine-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.combine.Predictor"
    enable = true
  },
  {
    name = "micro-pred-fit-combine-fix"
    index = 17
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-fix-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.fix.Predictor"
    enable = true
  },
# Process 4
  {
    name = "micro-pred-combine-split"
    index = 18
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-split-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.split.Predictor"
    enable = true
  },
  {
    name = "micro-pred-combine-split-sum"
    index = 19
    #options ["cleaner","model"]
    type = "model"
    jar-name = "rms-ab-micro-pred-sum-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.sum.Predictor"
    enable = true
  },
  {
    name = "micro-pred-checker"
    index = 20
    type = "model"
    jar-name = "rms-ab-micro-pred-checker-assembly-1.3.jar"
    class-name = "cn.jw.rms.ab.pred.checker.Predictor"
    enable = true
  }
]

#assembly的参数配置
parameters = [
# Process 1
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-fit-total"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    #(必填)处理后数据保存目录
    dist-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/dt=V_VERSION"
    #(必填)清洗开始日期,指定日期时,实际使用(fc-date - 1)的日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    #必须为365的倍数
    default-hist-days = 960
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    hist-enable = true
    hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/dt=V_SEG_BK_DAILY_SUM_HIST"
    hist-start="V_SF_TR_BEGIN_DT"
    hist-end="V_SF_TR_END_DT"
    fc-days = V_ADV_FC_DAYS
    etl-type = "daily"
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-fit-shortterm"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/dt=V_VERSION"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    specialdays-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/specialday/"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd"
    season-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/season/"
    #(必填)处理后数据保存目录
    dist-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_sf_pu/dt=V_VERSION"
    #(必填)清洗开始日期,指定日期时,实际使用(fc-date - 1)的日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    checkpoint-num = 200
    checkpoint-dir = "hdfs://ns1/p/bw/bi/rms/spark_checkpoint"
    using-prevStepRDD=false
    hist-enable = true
    hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/dt=V_VERSION"
    hist-start="V_SF_TR_BEGIN_DT"
    #当hist-enable=true时, 作为历史数据的结束日期
    hist-end="V_SF_TR_END_DT"
    #当hist-enable=false时, 作为计算历史数据开始日期的天数
    default-hist-days = 960
    #用提前几列的数据预测
    m = 3
    #当某个tag某预测列的历史数据不满足要求时,使用的w权重
    # the count of w should be m + 1
    singular-w = "0.4#0.3#0.3#0"
    #options ["weekday","weekendOrNot","noWeekday"]
    season-weekday-tag-type = "sameTag"
    #1:Mon, 2:Tue, 3:Wed, 4:Thu, 5:Fri, 6:Sat, 7:Sun
    weekend-days = [5,6,7]
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    #true or false
    fault-tolerance = true
    print-w = false
    knn{
      k = 100
    }
    seg-type = "FIT_TOTAL"
  },
  {
    name = "micro-pred-shortterm"
    hadoop-host= "hdfs://ns1"
    segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    specialdays-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/specialday/"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd"
    season-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/season/"
    dist-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_sf_pu/dt=V_VERSION"
    fc-date = "V_FC_DATE_LIST"
    common-htlcd = "BW00000001"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    pairRDD-repartition-num = 10
    RDD-repartition-num = 10
    save-result-to-file = true
    checkpoint-num = 200
    checkpoint-dir = "hdfs://ns1/p/bw/bi/rms/spark_checkpoint"
    using-prevStepRDD=false
    hist-enable = true
    hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/dt=V_SEG_BK_DAILY_SUM_HIST"
    hist-start="V_SF_TR_BEGIN_DT"
    hist-end="V_SF_TR_END_DT"
    default-hist-days = 960
    m = 3
    singular-w = "0.4#0.3#0.3#0"
    season-weekday-tag-type = "sameTag"
    weekend-days = [5,6,7]
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    fault-tolerance = true
    print-w = false
    knn{
      k = 100
    }
   seg-type = "others"
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-fit-shortterm-fix"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    nofix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_sf_pu/dt=V_VERSION"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd"
    #(必填)处理后数据保存目录
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_pu/dt=V_VERSION"
    #(必填)清洗开始日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable=true
    htltotal-enable=false
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    seg-type = "FIT_TOTAL"
    invt-field-conifg-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt_field_config/"
    seg-nofix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_sf_pu/dt=V_VERSION"
  },
  {
    name = "micro-pred-fit-shortterm-fix-sum"
    matrix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_pu/dt=V_VERSION"
    fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price"
    field-splitter = "#"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_sum/dt=V_VERSION"
    pairRDD-repartition-num = "10"
    RDD-repartition-num = "10"
    save-result-to-file = true
    hadoop-host = "hdfs://ns1"
    fc-date = "V_FC_DATE_LIST"
    hist-enable = true
    hist-fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price/dt=V_SEG_BK_DAILY_SUM_HIST"
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-shortterm-split"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    nosplit-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_sf_pu/dt=V_VERSION"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_pu/dt=V_VERSION"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    #(必填)处理后数据保存目录
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_pu/dt=V_VERSION"
    #(必填)清洗开始日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable=true
    htltotal-enable=false
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
  {
    name = "micro-pred-shortterm-split-sum"
    matrix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_pu/dt=V_VERSION"
    fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price"
    field-splitter = "#"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_sum/dt=V_VERSION"
    pairRDD-repartition-num = "10"
    RDD-repartition-num = "10"
    save-result-to-file = true
    hadoop-host = "hdfs://ns1"
    fc-date = "V_FC_DATE_LIST"
    hist-enable = true
    hist-fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price/dt=V_SEG_BK_DAILY_SUM_HIST"
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
# Process 2
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-fit-longterm"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    specialdays-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/specialday/"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    season-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/season/"
    #(必填)处理后数据保存目录
    dist-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_pu/dt=V_VERSION"
    #(必填)清洗开始日期,指定日期时,实际使用(fc-date - 1)的日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    #必须为365的倍数
    default-hist-days = 960
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable = true
    #hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/pms/pms_stage0/seg_bk_daily_sum"
    hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/dt=V_VERSION"
    hist-start = "V_LF_TR_BEGIN_DT"
    hist-end = "V_LF_TR_END_DT"
    #options ["weekday","weekendOrNot","noWeekday"]
    season-weekday-tag-type = "weekday"
    #1:Mon, 2:Tue, 3:Wed, 4:Thu, 5:Fri, 6:Sat, 7:Sun
    weekend-days = [5,6,7]
    checkpoint-num = 200
    checkpoint-dir = "hdfs://ns1/p/bw/bi/rms/spark_checkpoint"
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    #true or false
    fault-tolerance = true
    seg-type = "FIT_TOTAL"
  },
  {
    name = "micro-pred-fit-longterm-sum"
    matrix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_pu/dt=V_VERSION"
    fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price"
    field-splitter = "#"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_sum/dt=V_VERSION"
    pairRDD-repartition-num = "10"
    RDD-repartition-num = "10"
    save-result-to-file = true
    hadoop-host = "hdfs://ns1"
    fc-date = "V_FC_DATE_LIST"
    hist-enable = true
    hist-fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price/dt=V_SEG_BK_DAILY_SUM_HIST"
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
# Process 3
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-longterm"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    specialdays-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/specialday/"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    season-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/season/"
    #(必填)处理后数据保存目录
    dist-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_pu/dt=V_VERSION"
    #(必填)清洗开始日期,指定日期时,实际使用(fc-date - 1)的日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    #必须为365的倍数
    default-hist-days = 960
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable = true
    #hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/pms/pms_stage0/seg_bk_daily_sum"
    hist-segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/dt=V_SEG_BK_DAILY_SUM_HIST"
    hist-start = "V_LF_TR_BEGIN_DT"
    hist-end = "V_LF_TR_END_DT"
    #options ["weekday","weekendOrNot","noWeekday"]
    season-weekday-tag-type = "weekday"
    #1:Mon, 2:Tue, 3:Wed, 4:Thu, 5:Fri, 6:Sat, 7:Sun
    weekend-days = [5,6,7]
    checkpoint-num = 200
    checkpoint-dir = "hdfs://ns1/p/bw/bi/rms/spark_checkpoint"
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    #true or false
    fault-tolerance = true
    seg-type = "others"
  },
  {
    name = "micro-pred-longterm-sum"
    matrix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_pu/dt=V_VERSION"
    fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price"
    field-splitter = "#"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_sum/dt=V_VERSION"
    pairRDD-repartition-num = "10"
    RDD-repartition-num = "10"
    save-result-to-file = true
    hadoop-host = "hdfs://ns1"
    fc-date = "V_FC_DATE_LIST"
    hist-enable = true
    hist-fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price/dt=V_SEG_BK_DAILY_SUM_HIST"
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
  {
  	name = "micro-pred-copy-daily-to-hist"
	hdfs-host = "hdfs://ns1"
        src-dist-list = [
	  {
	    src = "hdfs://ns1/p/bw/bi/rms/middata/daily/pred_lf_sum/dt=2*"
	    dist = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_sum/dt=V_VERSION/daily"
	  },
	  {
	    src = "hdfs://ns1/p/bw/bi/rms/middata/daily/split_pred_sf_sum/dt=2*"
	    dist = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_sum/dt=V_VERSION/daily"
	  },
	  {
	    src = "hdfs://ns1/p/bw/bi/rms/middata/daily/pred_fit_lf_sum/dt=2*"
	    dist = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_sum/dt=V_VERSION/daily"
	  },
	  {
	    src = "hdfs://ns1/p/bw/bi/rms/middata/daily/fix_pred_fit_sf_sum/dt=2*"
	    dist = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_sum/dt=V_VERSION/daily"
	  }
	]
  },
  {
    name = "micro-pred-fit-wsfweight"
    segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/"
    longterm-sum-dir= "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_sum"
    shortterm-sum-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_sum"
    shortterm-mw-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/pred_st_nw/"
    ispred-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/is_predict/"
    datetag-dir = ""
    exclude-livedt = ""
    field-splitter = "#"
    wsf-dist-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/pred_fit_wsf"
    conf-dist-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/fit_predconf/"
    pairRDD-repartition-num = 10
    RDD-repartition-num = 10
    save-result-to-file = "true"
    hadoop-host = "hdfs://ns1"
    fc-date="2013-02-14"
    default-fc-days = 365
    hist-segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/dt=V_VERSION/*"
    hist-longterm-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_sum/dt=V_VERSION/*"
    hist-shortterm-dir ="hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_sum/dt=V_VERSION/*"
    hist-enable = true
    adv-fc-days = 14
    start-dt = "V_WSF_TR_BEGIN_DT"
    end-dt = "V_WSF_TR_END_DT"
    fc-htlcd = "V_HTL"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    common-htlcd = "BW00000001"
    seg-type = "FIT_TOTAL"
    wsf-hist-days-open = false
    wsf-hist-days = 960
  },
  {
     name = "micro-pred-wsfweight"
    segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/"
    longterm-sum-dir= "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_sum/"
    shortterm-sum-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_sum/"
    shortterm-mw-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/pred_st_nw/"
    ispred-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/is_predict/" 
    datetag-dir = ""
    exclude-livedt = ""
    field-splitter = "#"
    wsf-dist-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/pred_wsf"
    conf-dist-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/"
    pairRDD-repartition-num = 10
    RDD-repartition-num = 10
    save-result-to-file = "true"
    hadoop-host = "hdfs://ns1"
    fc-date="2013-02-14"
    default-fc-days = 365
    hist-segbkdailysum-dir="hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/dt=V_SEG_BK_DAILY_SUM_HIST"
    hist-longterm-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_sum/dt=V_VERSION/*"
    hist-shortterm-dir ="hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_sum/dt=V_VERSION/*"
    hist-enable = true
    adv-fc-days = 14
    start-dt = "V_WSF_TR_BEGIN_DT"
    end-dt = "V_WSF_TR_END_DT"
    fc-htlcd = "V_HTL"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    common-htlcd = "BW00000001"
    seg-type = "others"
    wsf-hist-days-open = false
    wsf-hist-days = 960
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-fit-combine"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    longterm-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_pu/dt=V_VERSION/*"
    shortterm-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_pu/dt=V_VERSION/*"
    specialdays-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/specialday/"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    season-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/season/"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/fit_predconf/*"
    #(必填)处理后数据保存目录
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_wsf_pu/dt=V_VERSION"
    #(必填)清洗开始日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    #必须为365的倍数
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable = true
    # options ["weekday","weekendOrNot","noWeekday"]
    season-weekday-tag-type = "weekday"
    #1:Mon, 2:Tue, 3:Wed, 4:Thu, 5:Fri, 6:Sat, 7:Sun
    weekend-days = [5,6,7]
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    seg-type = "FIT_TOTAL"
    special-days-tag-enable = true
    segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit/dt=V_VERSION"
    fault-tolerance = true
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-combine"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    longterm-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_pu/dt=V_VERSION/*"
    shortterm-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_pu/dt=V_VERSION/*"
    specialdays-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/specialday/"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    season-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/season/"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    #(必填)处理后数据保存目录
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_wsf_pu/dt=V_VERSION"
    #(必填)清洗开始日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    #必须为365的倍数
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable = true
    # options ["weekday","weekendOrNot","noWeekday"]
    season-weekday-tag-type = "weekday"
    #1:Mon, 2:Tue, 3:Wed, 4:Thu, 5:Fri, 6:Sat, 7:Sun
    weekend-days = [5,6,7]
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    seg-type = "others"
    special-days-tag-enable = true
    segbkdailysum-dir = "hdfs://ns1/p/bw/bi/rms/seg_bk_daily_sum/dt=V_SEG_BK_DAILY_SUM_HIST"
    fault-tolerance = true
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-fit-combine-fix"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    nofix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_wsf_pu/dt=V_VERSION"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd"
    #(必填)处理后数据保存目录
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_wsf_pu/dt=V_VERSION"
    #(必填)清洗开始日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable=true
    htltotal-enable=false
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
    seg-type = "FIT_TOTAL"
    invt-field-conifg-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt_field_config/"
    seg-nofix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_wsf_pu/dt=V_VERSION"
  },
# Process 4
 {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "micro-pred-combine-split"
    #以下就为具体的参数
    #(必填)数据源所在目录
    hadoop-host= "hdfs://ns1"
    #(必填)数据源所在目录
    nosplit-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_wsf_pu/dt=V_VERSION"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_wsf_pu/dt=V_VERSION"
    predconf-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/predconf/*"
    hotel-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/htlcd/"
    #(必填)处理后数据保存目录
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_wsf_pu/dt=V_VERSION"
    #(必填)清洗开始日期
    #default is "now"
    fc-date = "V_FC_DATE_LIST"
    common-htlcd = "BW00000001"
    #default is "all"
    fc-htlcd = "V_HTL"
    field-splitter = "#"
    #(必填)pairRDD重新分区的个数, 一般为cpu核数
    pairRDD-repartition-num = 10
    #(必填)普通RDD重新分区的个数, 视情况而定, 一般为cpu核数
    RDD-repartition-num = 10
    #(必填)是否将清洗后数据保存到上面的保存目录
    save-result-to-file = true
    using-prevStepRDD=false
    hist-enable=true
    htltotal-enable=false
    fc-days = V_ADV_FC_DAYS
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
  {
    name = "micro-pred-combine-split-sum"
    matrix-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_wsf_pu/dt=V_VERSION"
    fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price"
    field-splitter = "#"
    inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
    dist-dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_wsf_sum/dt=V_VERSION"
    pairRDD-repartition-num = "10"
    RDD-repartition-num = "10"
    save-result-to-file = true
    hadoop-host = "hdfs://ns1"
    fc-date = "V_FC_DATE_LIST"
    hist-enable = true
    hist-fc-price-dir = "hdfs://ns1/p/bw/bi/rms/pred_avg_price/dt=V_SEG_BK_DAILY_SUM_HIST"
    matrix-columns = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,29,36,43,57,71,85,119,147,175,203,231,259,287,315,343,365]
  },
{
name = "micro-pred-checker"
inventory-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt/"
invt-field-conifg-dir = "hdfs://ns1/p/bw/bi/rms/conf/V_VERSION/invt_field_config/"
pairRDD-repartition-num = 1
RDD-repartition-num = 1
fc-date = "V_FC_DATE_LIST"
fc-days = 31
check-fc-days = 365
field-splitter = "#"
hist-enable = true
sum-dir-list = [
  {
    name = "pred_lf_sum"
    dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_lf_sum/dt=V_VERSION/*"
    enable = false
  },
  {
    name = "split_pred_sf_sum"
    dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_sf_sum/dt=V_VERSION/*"
    enable = true
  },
  {
    name = "pred_fit_lf_sum"
    dir = "hdfs://ns1/p/bw/bi/rms/middata/history/pred_fit_lf_sum/dt=V_VERSION/*"
    enable = false
  },
  {
    name = "fix_pred_fit_sf_sum"
    dir = "hdfs://ns1/p/bw/bi/rms/middata/history/fix_pred_fit_sf_sum/dt=V_VERSION/*"
    enable = false
  },
  {
    name = "split_pred_wsf_sum"
    dir = "hdfs://ns1/p/bw/bi/rms/middata/history/split_pred_wsf_sum/dt=V_VERSION/*"
    enable = true
  }
]
}
]
